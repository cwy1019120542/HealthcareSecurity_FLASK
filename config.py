import os
from datetime import timedelta, datetime

class Config:
    SECRET_KEY = os.getenv('SECRET_KEY')
    SQLALCHEMY_DATABASE_URI = os.getenv('SQLALCHEMY_DATABASE_URI')
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    SQLALCHEMY_ECHO = False
    Access_Control_Allow_Origin = '*'
    PERMANENT_SESSION_LIFETIME = timedelta(days=3)
    SESSION_COOKIE_NAME = "HealthcareSecurity"
    DEFAULT_YEAR = '2022'

class EnumerateData:
    attribute = ('农村特困供养', '城市特困供养', '农村低保', '城市低保', '一般居民')
    second_attribute = ('孤儿', '重点优抚对象', '重度残疾人', '事实无人抚养儿童')
    insured_state = ('本地居民', '本地职工', '异地居民', '异地职工', '死亡失联', '死亡', '失联', '动态新增', '参军服刑', '参军', '服刑', '自愿放弃', '未知')
    poverty_state = ('监测户', '稳定脱贫人口', '致贫返贫人口', '不贫困', '贫困人口')
    town_village_dict = {
        '槎水镇': ('滨河居委会', '槎水村', '方冲村', '后冲村', '金波村', '乐明村', '龙关村', '木岗村', '逆水村', '万全村', '油坊村', '皂河村', '中畈村'),
        '痘姆乡': ('红星村', '鞔鼓村', '求知村', '孙塝村', '吴塘村', '仙驾村', '孙榜村'),
        '水吼镇': ('程湾村', '风光村', '高峰村', '割肚村', '和平村', '横中村', '黄龛村', '驾雾村', '马潭村', '梅寨村', '三里村', '水吼村', '天堂村', '天柱村'),
        '官庄镇': ('戈元村', '官庄村', '光华村', '金城村', '孔士村', '乐平村', '平峰村', '日光村', '升旗村', '水贵村', '坛畈村', '西岭村', '杨庄村', '常青居委会'),
        '黄柏镇': ('大水村', '黄柏村', '昆仑村', '陆河村', '叶河村', '袁桂村'),
        '塔畈乡': ('板仓村', '冯冲村', '倪河村', '彭河村', '双畈村', '塔畈村', '体元村', '西河村', '新安村', '杏花村', '周祠村'),
        '天柱山镇': ('白水村', '茶庄村', '风景村', '河西村', '林庄村', '天寺村'),
        '王河镇': ('程家井村', '丰收村', '光明村', '河镇村', '红光村', '龙湖村', '庆丰村', '天崇村', '皖潜村', '王河村', '先进村', '新发村', '薛家岗村', '永和村', '长友村', '中河村'),
        '五庙乡': ('程冲村', '红光村', '吴桥村', '新建村', '新田村', '杨畈村'),
        '油坝乡': ('崔仓村', '东店村', '桑树村', '唐埠村', '油坝村', '张祠村'),
        '开发区': ('八一村', '古塔村', '三合村', '古塔居委会', '三合居委会', '八一居委会'),
        '龙潭乡': ('暗冲村', '白寨村', '杜埠村', '湖田村', '龙潭村', '龙湾村', '漆铺村', '万涧村', '谢河村'),
        '余井镇': ('柴阁村', '程祠村', '黄岭村', '建军村', '进士村', '岭头居委会', '马道村', '松岭村', '糖岭村', '天明村', '天圣村', '田乐村', '文治村', '余井村'),
        '梅城镇': ('北街村', '北街居委会', '东关居委会', '凤凰村', '高集村', '河湾村', '河庄村', '利民村', '龙井居委会', '模范村', '潘铺村', '彭岭村', '平桥村', '七里村', '舒苑居委会', '蔬菜村', '双塘村', '太平村', '万岭村', '新桃园居委会', '彰法山居委会'),
        '源潭镇': ('东畈村', '东红村', '斗塘村', '光辉村', '路口村', '棋盘村', '棋盘居委会', '三河村', '三妙村', '双峰居委会', '双林村', '田墩村', '杨泗村', '叶典村', '永济村', '友爱村', '源潭村', '源潭居委会', '长和村', '长和居委会', '赵冲村', '东坂村'),
        '黄铺镇': ('张河村', '云峰村', '望虎村', '桃铺村', '莲花村', '金龙村', '黄铺村', '槐树村', '湖墩村', '和平村', '古井村', '古墩村', '陈桥村', '鲍岭村'),
        '黄泥镇': ('金湖村', '龙坦村', '前进村', '胜利村', '文昌村', '黄泥街居委会', '傅祠村', '付祠村'),
        '未知': ('未知', ),}
    town = tuple(town_village_dict.keys())
    village = tuple(set(j for i in town_village_dict.values() for j in i))
    insured_area = ("安庆市内", "安庆市外安徽省内", "未知", "广东省", "浙江省", "上海市", "江苏省", "北京市", "福建省", "山东省", "天津市", "新疆维吾尔", "河北省", "辽宁省", "四川省", "湖北省", "云南省", "重庆市", "河南省", "黑龙江省", "湖南省",
                    "江西省", "广西壮族", "甘肃省", "山西省", "内蒙古", "陕西省", "吉林省", "贵州省", "青海省", "西藏", "宁夏回族", "海南省", "台湾省", "香港特别行政区", "澳门特别行政区")
    source = ('省', '市', '平台', '乡镇', '民政局', '乡村振兴局')
    authority = {'市管理员': ('*', ), '乡镇管理员': ('insured_data', 'login', 'insured_data_list'), '村管理员': ('insured_data', 'login', 'insured_data_list')}
    identity = tuple(authority.keys())
    person_type = ('居民', '在职', '退休', '离休', '灵活就业人员')
    pay_place = ('医疗机构', '市内异地', '省内异地', '跨省异地', '中心')
    hospital_level = ('二级丙等', '一级甲等', '一级丙等', '二级甲等', '三级甲等', '三级乙等', '二级乙等', '三级丙等', '一级乙等', '无等级', '三级特等', '二级无等')
    evidence_type = ('居民身份证', '社会保障卡', '医保电子凭证', '终端扫脸', '未知')
    cure_type =('医疗类别', '门诊慢病', '定点药店购药', '普通门诊', '普通住院', '门诊两病', '单病种住院', '门诊单病种', '门诊特病', '无他方责任意外伤害住院',
                '外伤住院', '大额普通门诊', '床日费用住院', '计划生育住院', '生育住院', '生育门诊', '分疗程间断住院治疗', '自主就医住院', '计划生育手术费', '转外诊治住院', '急诊转住院',
                '18周岁以下苯丙酮尿症', '门诊挂号', '18周岁以下苯丙酮尿症及四氢生物蝶呤缺乏症')
    year = ('2021', '2022')

    @classmethod
    def data_response(cls):
        return {
            "attribute": cls.attribute,
            "second_attribute": cls.second_attribute,
            "insured_state": cls.insured_state,
            "poverty_state": cls.poverty_state,
            "town_village_dict": cls.town_village_dict,
            "insured_area": cls.insured_area,
            'person_type': cls.person_type,
            'pay_place': cls.pay_place,
            'hospital_level': cls.hospital_level,
            'evidence_type': cls.evidence_type,
            'cure_type': cls.cure_type,
            'year': cls.year,
        }
